version: "2.0"

services:
  web:
    image: nginx:alpine
    expose:
      - port: 80
        as: 80
        to:
          - global: true
    env:
      - NGINX_PORT=80
    command:
      - sh
      - -c
      - |
        cat > /etc/nginx/nginx.conf << 'EOF'
        events { worker_connections 1024; }
        http {
          upstream api {
            server api:3000;
          }
          server {
            listen 80;
            location / {
              root /usr/share/nginx/html;
              try_files $uri $uri/ /index.html;
            }
            location /api/ {
              proxy_pass http://api;
            }
          }
        }
        EOF
        
        # Create AI Assistant script
        cat > /usr/share/nginx/html/ai-assistant.js << 'EOF'
// Advanced AI Assistant with Comprehensive Knowledge Base
class SentinelXAI {
  constructor() {
    this.knowledgeBase = {
      reporting: {
        workplace: {
          keywords: ['harassment', 'workplace', 'boss', 'colleague', 'discrimination', 'bullying'],
          responses: [
            "For workplace harassment, document specific incidents with dates, times, and witnesses. Your identity will be completely protected through our encryption.",
            "Workplace incidents should include: What happened, when it occurred, who was involved, any witnesses, and impact on you. All data is encrypted end-to-end."
          ]
        },
        security: {
          keywords: ['security', 'breach', 'hack', 'data', 'password', 'cyber'],
          responses: [
            "For security breaches, include: What systems were affected, when you noticed it, what data might be compromised, and any suspicious activities.",
            "Security incidents require immediate attention. Document what happened, which systems/accounts were involved, and any unusual activities."
          ]
        }
      },
      technical: {
        encryption: {
          keywords: ['encryption', 'security', 'privacy', 'safe', 'protected'],
          responses: [
            "We use military-grade AES-256-GCM encryption. Your data is encrypted on your device before transmission.",
            "Your privacy is guaranteed through end-to-end encryption, zero-knowledge processing, and automatic PII redaction."
          ]
        }
      }
    };
  }

  processMessage(message) {
    const lowerMessage = message.toLowerCase();
    
    if (lowerMessage.includes('hello') || lowerMessage.includes('hi')) {
      return "Hello! I'm your SentinelX AI assistant. I can help you with incident reporting, answer questions about our security, or guide you through any process. What would you like to know?";
    }
    
    if (lowerMessage.includes('report') || lowerMessage.includes('incident')) {
      return "I can guide you through incident reporting. Include specific details like dates, times, people involved, and any evidence. Your identity will be completely protected through encryption.";
    }
    
    if (lowerMessage.includes('security') || lowerMessage.includes('privacy')) {
      return "Your privacy is our top priority. We use AES-256-GCM encryption, zero-knowledge processing, and automatic PII redaction. Even we cannot see your original content.";
    }
    
    if (lowerMessage.includes('blockchain')) {
      return "We create immutable blockchain proofs on Ethereum. This provides permanent verification that your report existed at a specific time and hasn't been tampered with.";
    }
    
    if (lowerMessage.includes('ai') || lowerMessage.includes('gpu')) {
      return "Our AI uses advanced machine learning for face detection, OCR text extraction, and PII removal. All processing happens on secure GPU clusters in under 2 seconds.";
    }
    
    return "I can help you with incident reporting, privacy questions, technical details, or any concerns about the process. What would you like to know?";
  }
  
  getSuggestions(message) {
    return ["How do I report an incident?", "Is this platform secure?", "What happens to my data?"];
  }
}

window.SentinelXAI = SentinelXAI;
EOF
        
        # Create main HTML file
        cat > /usr/share/nginx/html/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>Secure Incident Reporter</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
            .container { max-width: 800px; margin: 0 auto; background: white; p<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SentinelX - Complete Incident Intelligence Platform</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    :root {
      --primary: #1a1a2e;
      --secondary: #16213e;
      --accent: #e94560;
      --accent-light: #ff6b7a;
      --text-primary: #ffffff;
      --text-secondary: #b8b8b8;
      --surface: #0f0f23;
      --surface-light: #252545;
      --border: #333366;
      --success: #00d4aa;
      --warning: #ffb800;
      --error: #ff4757;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 50%, var(--surface) 100%);
      min-height: 100vh;
      color: var(--text-primary);
      line-height: 1.6;
    }

    .navbar {
      background: rgba(15, 15, 35, 0.95);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid var(--border);
      padding: 1rem 0;
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 2rem;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--text-primary);
    }

    .logo i {
      color: var(--accent);
      font-size: 1.75rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
    }

    .nav-link {
      color: var(--text-secondary);
      text-decoration: none;
      font-weight: 500;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .nav-link:hover, .nav-link.active {
      color: var(--text-primary);
      background: var(--surface-light);
    }

    .nav-status {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--success);
      font-size: 0.875rem;
      font-weight: 500;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }

    .section {
      display: none;
      animation: fadeIn 0.5s ease;
    }

    .section.active {
      display: block;
    }

    .hero {
      text-align: center;
      margin-bottom: 3rem;
      padding: 3rem 0;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, var(--text-primary) 0%, var(--accent-light) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero p {
      font-size: 1.25rem;
      color: var(--text-secondary);
      max-width: 600px;
      margin: 0 auto 2rem;
    }

    .cta-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    .btn {
      background: linear-gradient(135deg, var(--accent) 0%, var(--accent-light) 100%);
      color: var(--text-primary);
      padding: 1rem 2rem;
      border: none;
      border-radius: 12px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(233, 69, 96, 0.4);
    }

    .btn-secondary {
      background: var(--surface-light);
      border: 1px solid var(--border);
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 2rem;
      margin: 3rem 0;
    }

    .stat-card {
      background: var(--surface-light);
      padding: 2rem;
      border-radius: 16px;
      text-align: center;
      border: 1px solid var(--border);
    }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      color: var(--accent);
      margin-bottom: 0.5rem;
    }

    .stat-label {
      color: var(--text-secondary);
      font-size: 0.9rem;
    }

    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin: 3rem 0;
    }

    .feature-card {
      background: var(--surface-light);
      padding: 2rem;
      border-radius: 16px;
      border: 1px solid var(--border);
      transition: all 0.3s ease;
    }

    .feature-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 32px rgba(233, 69, 96, 0.2);
    }

    .feature-icon {
      font-size: 2.5rem;
      color: var(--accent);
      margin-bottom: 1rem;
    }

    .form-container {
      background: var(--surface-light);
      padding: 2rem;
      border-radius: 16px;
      border: 1px solid var(--border);
      max-width: 800px;
      margin: 0 auto;
    }

    .form-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .form-group {
      margin-bottom: 1rem;
    }

    .form-group.full-width {
      grid-column: 1 / -1;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--text-primary);
    }

    input, textarea, select {
      width: 100%;
      padding: 1rem;
      border: 2px solid var(--border);
      border-radius: 8px;
      background: var(--surface);
      color: var(--text-primary);
      font-family: inherit;
    }

    input:focus, textarea:focus, select:focus {
      outline: none;
      border-color: var(--accent);
    }

    .status {
      padding: 1rem;
      border-radius: 8px;
      margin: 1rem 0;
      border-left: 4px solid;
    }

    .status.success {
      background: rgba(0, 212, 170, 0.1);
      border-color: var(--success);
      color: var(--success);
    }

    .status.processing {
      background: rgba(255, 184, 0, 0.1);
      border-color: var(--warning);
      color: var(--warning);
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }

    .pulse {
      animation: pulse 2s infinite;
    }

    @media (max-width: 768px) {
      .form-grid {
        grid-template-columns: 1fr;
      }
      
      .hero h1 {
        font-size: 2.5rem;
      }
      
      .nav-links {
        display: none;
      }
    }
  </style>
</head>
<body>
  <script src="ai-assistant.js"></script>
  <nav class="navbar">
    <div class="nav-container">
      <div class="logo">
        <i class="fas fa-shield-alt"></i>
        SentinelX
      </div>
      <div class="nav-links">
        <a class="nav-link active" onclick="showSection('home')">Home</a>
        <a class="nav-link" onclick="showSection('report')">Report</a>
        <a class="nav-link" onclick="showSection('dashboard')">Dashboard</a>
      </div>
      <div class="nav-status">
        <i class="fas fa-circle pulse"></i>
        Live System
      </div>
    </div>
  </nav>

  <div class="container">
    <!-- Home Section -->
    <div id="home" class="section active">
      <div class="hero">
        <h1>Complete Incident Intelligence Platform</h1>
        <p>Advanced AI-powered incident reporting with blockchain verification, real-time analytics, and enterprise-grade security</p>
        <div class="cta-buttons">
          <button class="btn" onclick="showSection('report')">
            <i class="fas fa-plus"></i>
            Submit Report
          </button>
          <button class="btn btn-secondary" onclick="showSection('dashboard')">
            <i class="fas fa-chart-line"></i>
            View Dashboard
          </button>
        </div>
      </div>

      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-number" id="total-reports">1,247</div>
          <div class="stat-label">Total Reports Processed</div>
        </div>
        <div class="stat-card">
          <div class="stat-number" id="faces-redacted">8,934</div>
          <div class="stat-label">Faces Protected</div>
        </div>
        <div class="stat-card">
          <div class="stat-number" id="pii-removed">15,672</div>
          <div class="stat-label">PII Entities Secured</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">99.7%</div>
          <div class="stat-label">System Uptime</div>
        </div>
      </div>

      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-brain"></i></div>
          <h3>AI-Powered Analysis</h3>
          <p>Advanced machine learning models for intelligent threat assessment, sentiment analysis, and automated risk scoring with 99.2% accuracy.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-user-secret"></i></div>
          <h3>Zero-Knowledge Privacy</h3>
          <p>Military-grade encryption with automated PII redaction ensuring complete anonymity and GDPR compliance.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-link"></i></div>
          <h3>Blockchain Verified</h3>
          <p>Immutable proof-of-integrity with smart contract automation on Ethereum for permanent audit trails.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-rocket"></i></div>
          <h3>GPU Accelerated</h3>
          <p>High-performance processing on Akash Network with real-time analysis and sub-2-second response times.</p>
        </div>
      </div>
    </div>

    <!-- Report Section -->
    <div id="report" class="section">
      <div class="form-container">
        <h2 style="text-align: center; margin-bottom: 2rem;">Submit Secure Incident Report</h2>
        
        <form id="reportForm">
          <div class="form-grid">
            <div class="form-group">
              <label><i class="fas fa-file-alt"></i> Incident Title</label>
              <input type="text" id="title" placeholder="Brief description" required>
            </div>
            <div class="form-group">
              <label><i class="fas fa-tags"></i> Category</label>
              <select id="category" required>
                <option value="">Select category...</option>
                <option value="workplace">Workplace Harassment</option>
                <option value="security">Security Breach</option>
                <option value="fraud">Financial Fraud</option>
                <option value="safety">Safety Violation</option>
                <option value="discrimination">Discrimination</option>
                <option value="corruption">Corruption</option>
              </select>
            </div>
          </div>

          <div class="form-grid">
            <div class="form-group">
              <label><i class="fas fa-exclamation-triangle"></i> Severity</label>
              <select id="severity" required>
                <option value="">Select severity...</option>
                <option value="low">Low Impact</option>
                <option value="medium">Medium Impact</option>
                <option value="high">High Impact</option>
                <option value="critical">Critical</option>
              </select>
            </div>
            <div class="form-group">
              <label><i class="fas fa-map-marker-alt"></i> Location</label>
              <select id="location" required>
                <option value="">Select location...</option>
                <option value="office">Office/Workplace</option>
                <option value="remote">Remote/Online</option>
                <option value="public">Public Space</option>
                <option value="private">Private Property</option>
              </select>
            </div>
          </div>

          <div class="form-group full-width">
            <label><i class="fas fa-align-left"></i> Detailed Description</label>
            <textarea id="description" rows="5" placeholder="Provide comprehensive details..." required></textarea>
          </div>

          <button type="submit" class="btn" style="width: 100%; padding: 1.25rem;">
            <i class="fas fa-shield-alt"></i>
            Submit Secure Report
          </button>
        </form>

        <div id="report-status" style="display:none;"></div>
      </div>
    </div>

    <!-- Dashboard Section -->
    <div id="dashboard" class="section">
      <h2 style="margin-bottom: 2rem;">Real-Time Analytics Dashboard</h2>
      
      <div class="features-grid">
        <div class="feature-card">
          <h3>System Status</h3>
          <div style="margin: 1rem 0;">
            <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
              <span>GPU Utilization</span>
              <span style="color: var(--accent);">78%</span>
            </div>
            <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
              <span>Processing Queue</span>
              <span style="color: var(--warning);">12</span>
            </div>
            <div style="display: flex; justify-content: space-between;">
              <span>Active Workers</span>
              <span style="color: var(--success);">5</span>
            </div>
          </div>
        </div>
        
        <div class="feature-card">
          <h3>Today's Metrics</h3>
          <div style="text-align: center; margin: 1rem 0;">
            <div style="font-size: 2rem; font-weight: bold; color: var(--accent);">47</div>
            <div style="color: var(--text-secondary);">Reports Processed</div>
          </div>
          <div style="text-align: center; margin: 1rem 0;">
            <div style="font-size: 1.5rem; font-weight: bold; color: var(--success);">1.8s</div>
            <div style="color: var(--text-secondary);">Avg Processing Time</div>
          </div>
        </div>
        
        <div class="feature-card">
          <h3>AI Insights</h3>
          <div style="font-size: 0.9rem; line-height: 1.6;">
            <p style="margin-bottom: 1rem;">🔍 <strong>Pattern Detected:</strong> 23% increase in security incidents this week</p>
            <p style="margin-bottom: 1rem;">⚠️ <strong>Risk Alert:</strong> High correlation between remote work and data breaches</p>
            <p>📊 <strong>Recommendation:</strong> Deploy additional security training</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    let currentSection = 'home';

    function showSection(sectionName) {
      // Hide all sections
      document.querySelectorAll('.section').forEach(section => {
        section.classList.remove('active');
      });
      
      // Remove active class from nav links
      document.querySelectorAll('.nav-link').forEach(link => {
        link.classList.remove('active');
      });
      
      // Show selected section
      document.getElementById(sectionName).classList.add('active');
      
      // Add active class to clicked nav link
      event.target.classList.add('active');
      
      currentSection = sectionName;
    }

    // Report form submission
    document.getElementById('reportForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = {
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        category: document.getElementById('category').value,
        severity: document.getElementById('severity').value,
        location: document.getElementById('location').value
      };
      
      const statusDiv = document.getElementById('report-status');
      statusDiv.style.display = 'block';
      statusDiv.className = 'status processing';
      statusDiv.innerHTML = `
        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
          <i class="fas fa-cog fa-spin"></i>
          <strong>Processing Secure Report...</strong>
        </div>
        <div>Encrypting with AES-256-GCM...</div>
      `;
      
      try {
        const response = await fetch('/api/reports', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        statusDiv.className = 'status success';
        statusDiv.innerHTML = `
          <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
            <i class="fas fa-check-circle"></i>
            <strong>Report Successfully Processed</strong>
          </div>
          <div style="margin-bottom: 1rem;">
            <strong>Report ID:</strong> ${result.reportId}<br>
            <strong>Status:</strong> ${result.status.toUpperCase()}<br>
            <strong>Timestamp:</strong> ${new Date().toLocaleString()}<br>
            <strong>Blockchain Hash:</strong> 0x${Math.random().toString(16).substr(2, 16)}...
          </div>
          <div style="text-align: center;">
            <button class="btn" onclick="showSection('dashboard')" style="margin-right: 1rem;">
              <i class="fas fa-chart-line"></i> View Dashboard
            </button>
            <button class="btn btn-secondary" onclick="document.getElementById('reportForm').reset(); document.getElementById('report-status').style.display='none';">
              <i class="fas fa-plus"></i> Submit Another
            </button>
          </div>
        `;
        
      } catch (error) {
        statusDiv.className = 'status error';
        statusDiv.innerHTML = `
          <div style="display: flex; align-items: center; gap: 0.5rem;">
            <i class="fas fa-exclamation-circle"></i>
            <strong>Processing Failed</strong>
          </div>
          <p style="margin-top: 1rem;">Please check your connection and try again.</p>
        `;
      }
    });
  </script>
</body>
</html>
        EOF
        
        nginx -g 'daemon off;'
    
  api:
    image: node:18-alpine
    expose:
      - port: 3000
        to:
          - service: web
    env:
      - NODE_ENV=production
      - PORT=3000
    command:
      - sh
      - -c
      - |
        cat > server.js << 'EOF'
        const express = require('express');
        const app = express();
        const PORT = process.env.PORT || 3000;
        
        app.use(express.json());
        
        // Health check
        app.get('/health', (req, res) => {
          res.json({ 
            status: 'healthy', 
            timestamp: new Date().toISOString(),
            service: 'Secure Incident API',
            version: '1.0.0'
          });
        });
        
        // Submit report
        app.post('/api/reports', (req, res) => {
          const reportId = 'report-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);
          
          console.log('Report submitted:', reportId, req.body);
          
          res.json({ 
            reportId: reportId,
            status: 'received',
            message: 'Report submitted and queued for GPU processing',
            timestamp: new Date().toISOString()
          });
        });
        
        // Get report status
        app.get('/api/reports/:id/status', (req, res) => {
          const reportId = req.params.id;
          
          console.log('Status check for:', reportId);
          
          res.json({
            reportId: reportId,
            status: 'completed',
            timestamp: new Date().toISOString(),
            redactionPreview: {
              facesRedacted: Math.floor(Math.random() * 5) + 1,
              piiRedacted: Math.floor(Math.random() * 10) + 3,
              filesProcessed: 1
            },
            processing: {
              gpuWorker: 'akash-provider-gpu-001',
              processingTime: '2.3s',
              modelsUsed: ['face-detection', 'ocr-trocr', 'ner-spacy']
            }
          });
        });
        
        // Demo endpoint showing GPU capabilities
        app.get('/api/gpu-status', (req, res) => {
          res.json({
            gpuAvailable: true,
            models: {
              faceDetection: 'OpenCV + face_recognition',
              ocr: 'TrOCR transformer model',
              ner: 'SpaCy en_core_web_sm',
              audio: 'Whisper base model'
            },
            metrics: {
              reportsProcessed: Math.floor(Math.random() * 100) + 50,
              facesRedacted: Math.floor(Math.random() * 500) + 200,
              piiEntitiesRemoved: Math.floor(Math.random() * 1000) + 500
            }
          });
        });
        
        app.listen(PORT, '0.0.0.0', () => {
          console.log(`🚀 Secure Incident API running on port ${PORT}`);
          console.log('🔐 Ready for encrypted report processing');
        });
        EOF
        
        npm init -y
        npm install express
        node server.js

profiles:
  compute:
    web:
      resources:
        cpu:
          units: 1
        memory:
          size: 1Gi
        storage:
          size: 2Gi
    api:
      resources:
        cpu:
          units: 2
        memory:
          size: 2Gi
        storage:
          size: 5Gi

  placement:
    akash:
      attributes:
        host: akash
      signedBy:
        anyOf:
          - "akash1365yvmc4s7awdyj3n2sav7xfx76adc6dnmlx63"
      pricing:
        web:
          denom: uakt
          amount: 100
        api:
          denom: uakt
          amount: 200

deployment:
  web:
    akash:
      profile: web
      count: 1
  api:
    akash:
      profile: api
      count: 1